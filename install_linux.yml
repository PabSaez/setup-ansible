---
- name: Installation de Linux et configuration des logiciels
  hosts: localhost
  become: yes

  vars:
    common_software:
      - git
      - curl
      - vim
      - htop
      - docker.io
      - vlc
      - wezterm
      - openssh-server
      - openssh-client
      - kwrite
      - tigervnc-standalone-server
      - xfce4
      - xfce4-goodies
      - wget
      - ansible
      - python3-pip
      - tree
      - tar
      - build-essential
      - software-properties-common
      - unzip
      - zsh
      - cargo
      - python3-pip
      - zoxide
      - fzf
      - flatpak
      - gnome-software-plugin-flatpak
      - gnome-tweaks
      - neovim

  tasks:
    - name: Mise à jour et mise à niveau du système
      apt:
        update_cache: yes
        upgrade: dist

    - name: Ajouter la clé du dépôt WezTerm
      shell: |
        curl -fsSL https://apt.fury.io/wez/gpg.key | sudo gpg --yes --dearmor -o /usr/share/keyrings/wezterm-fury.gpg
        echo 'deb [signed-by=/usr/share/keyrings/wezterm-fury.gpg] https://apt.fury.io/wez/ * *' | sudo tee /etc/apt/sources.list.d/wezterm.list

    - name: Mise à jour des sources et installation des packages nécessaires
      apt:
        name: "{{ common_software }}"
        state: present
        update_cache: yes

    - name: Définir WezTerm comme terminal par défaut
      shell: |
        sudo update-alternatives --set x-terminal-emulator /usr/bin/wezterm

    - name: Créer le répertoire de configuration de WezTerm
      file:
        path: ~/.config/wezterm
        state: directory
        mode: '0755'

    - name: Configurer WezTerm avec un thème personnalisé
      copy:
        dest: ~/.config/wezterm/wezterm.lua
        content: |
          local wezterm = require 'wezterm';

          return {
            color_scheme = "Catppuccin Mocha",
          }

    - name: Installation de zsh-autosuggestions
      shell: |
        echo 'deb http://download.opensuse.org/repositories/shells:/zsh-users:/zsh-autosuggestions/xUbuntu_22.04/ /' | sudo tee /etc/apt/sources.list.d/shells:zsh-users:zsh-autosuggestions.list
        curl -fsSL https://download.opensuse.org/repositories/shells:zsh-users:zsh-autosuggestions/xUbuntu_22.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/shells_zsh-users_zsh-autosuggestions.gpg > /dev/null
        sudo apt update
        sudo apt install zsh-autosuggestions -y

    - name: Installation de Oh-my-Zsh
      shell: |
        sudo apt install zsh -y
        chsh -s $(which zsh)
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

    - name: Configurer le thème et les plugins pour Zsh
      lineinfile:
        path: ~/.zshrc
        regexp: '^ZSH_THEME'
        line: 'ZSH_THEME="af-magic"'
        create: yes

    - name: Configurer les plugins pour Zsh
      lineinfile:
        path: ~/.zshrc
        regexp: '^plugins='
        line: 'plugins=(git zsh-autosuggestions sudo web-search)'
        create: yes

    - name: Ajouter des configurations personnalisées à ~/.zshrc
      blockinfile:
        path: ~/.zshrc
        block: |
          # Create directory and go in it
          function mk() {
              mkdir -p "$1" && cd "$1"
          }

          # Set NeoVim as default editor
          export EDITOR=nvim

          # Function to open files with kwrite in the background, detached from terminal
          function kwrite() {
              nohup kwrite "$1" >/dev/null 2>&1 &
          }

          alias n="nvim"
          alias o="xdg-open ."
          alias op="xdg-open"
          alias upup="sudo apt update && sudo apt upgrade -y"

    - name: Configurer Zoxide pour Zsh
      lineinfile:
        path: ~/.zshrc
        line: 'eval "$(zoxide init zsh)"'
        create: yes

    - name: Configurer fzf pour Zsh
      lineinfile:
        path: ~/.zshrc
        line: '[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh'
        create: yes

    - name: Recharger la configuration Zsh
      shell: source ~/.zshrc
      ignore_errors: yes

    - name: Installation de Neovim
      apt:
        name: neovim
        state: present

    - name: Installation de LazyVim
      shell: |
        git clone https://github.com/LazyVim/starter ~/.config/nvim
        rm -rf ~/.config/nvim/.git

    - name: Installation de JetBrains Toolbox
      shell: |
        wget https://download.jetbrains.com/toolbox/jetbrains-toolbox-1.22.10970.tar.gz
        tar -xzf jetbrains-toolbox-1.22.10970.tar.gz
        sudo mv jetbrains-toolbox-*/jetbrains-toolbox /usr/local/bin/

    - name: Télécharger le package Insync
      get_url:
        url: https://cdn.insynchq.com/builds/linux/3.9.3.60019/insync_3.9.3.60019-noble_amd64.deb
        dest: /tmp/insync.deb

    - name: Installer Insync
      apt:
        deb: /tmp/insync.deb

    - name: Installation de Microsoft Teams
      snap:
        name: teams-for-linux
        state: present

    - name: Installation de Ulauncher
      shell: |
        sudo add-apt-repository ppa:agornostal/ulauncher -y
        sudo apt update
        sudo apt install ulauncher -y

    - name: Installation de VNC Viewer
      shell: |
        wget https://www.realvnc.com/download/file/viewer.files/VNC-Viewer-6.21.920-Linux-x64.deb
        sudo dpkg -i VNC-Viewer-6.21.920-Linux-x64.deb
        sudo apt-get install -f -y

    - name: Télécharger le package VirtualBox
      get_url:
        url: https://download.virtualbox.org/virtualbox/7.0.20/virtualbox-7.0_7.0.20-163906~Ubuntu~noble_amd64.deb
        dest: /tmp/virtualbox.deb

    - name: Installer VirtualBox
      apt:
        deb: /tmp/virtualbox.deb

    - name: Ajout de l'utilisateur actuel au groupe Docker
      user:
        name: "{{ ansible_user_id }}"
        groups: docker
        append: yes

    - name: Configurer "click-action" pour Gnome Shell
      shell: |
        gsettings set org.gnome.shell.extensions.dash-to-dock click-action 'minimize'

    - name: Masquer le bouton "Show Apps" dans le dock GNOME
      shell: |
        gsettings set org.gnome.shell.extensions.dash-to-dock show-show-apps-button false

    - name: Configurer Flatpak
      shell: |
        sudo flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
